import React, { Component } from 'react';
import { AgGridReact } from 'ag-grid-react';

import 'ag-grid-community/dist/styles/ag-grid.css';
import 'ag-grid-community/dist/styles/ag-theme-balham.css';

class Grid extends Component {
    constructor(props) {
        super(props);
        this.state = {
            columns: this.props.columns,
            rows: this.props.rows
        }
        // this.menuHandleBlur = this.menuHandleBlur.bind(this);
        // this.menuHandleHover = this.menuHandleHover.bind(this);
        // this.menuHandleClick = this.menuHandleClick.bind(this);
    }
    componentWillReceiveProps({ columns, rows }) {
        this.setState({ columns, rows })
    }

    render() {
        // console.log(this.state.columns);
        // console.log(this.state.rows);
        return (
            <div className="ag-theme-balham" style={{ height: '300px', width: '100%' }}>
                <AgGridReact
                    columnDefs={this.state.columns}
                    rowData={this.state.rows}
                    enableRtl={true}
                    localeText={localeText}
                >

                </AgGridReact>
            </div>
        )
    }

}

export default Grid;
let localeText = {
    page: 'daPage',
    more: 'daMore',
    to: 'daTo',
    of: 'daOf',
    next: 'daNexten',
    last: 'daLasten',
    first: 'daFirsten',
    previous: 'daPreviousen',
    loadingOoo: 'daLoading...',
    selectAll: 'daSelect Allen',
    searchOoo: 'daSearch...',
    blanks: 'daBlanc',
    filterOoo: 'فیلتر ...',
    equals: 'برابر',
    notEqual: 'نامساوی ',
    dateFormatOoo: 'daYyyy-mm-dd',
    lessThan: 'daLessThan',
    greaterThan: 'daGreaterThan',
    lessThanOrEqual: 'daLessThanOrEqual',
    greaterThanOrEqual: 'daGreaterThanOrEqual',
    inRange: 'daInRange',
    inRangeStart: 'daRangeStart',
    inRangeEnd: 'daRangeEnd',
    contains: 'شامل باشد',
    notContains: 'شامل نباشد',
    startsWith: 'شروع شود با',
    endsWith: 'پایان یابد با',
    andCondition: 'و',
    orCondition: 'یا',
    applyFilter: 'daApply',
    resetFilter: 'daReset',
    clearFilter: 'daClear',
    group: 'laGroup',
    columns: 'laColumns',
    filters: 'laFilters',
    rowGroupColumns: 'laPivot Cols',
    rowGroupColumnsEmptyMessage: 'la drag cols to group',
    valueColumns: 'laValue Cols',
    pivotMode: 'laPivot-Mode',
    groups: 'laGroups',
    values: 'laValues',
    pivots: 'laPivots',
    valueColumnsEmptyMessage: 'la drag cols to aggregate',
    pivotColumnsEmptyMessage: 'la drag here to pivot',
    toolPanelButton: 'la tool panel',
    noRowsToShow: 'la no rows',
    enabled: 'laEnabled',
    pinColumn: 'laPin Column',
    valueAggregation: 'laValue Agg',
    autosizeThiscolumn: 'laAutosize Diz',
    autosizeAllColumns: 'laAutsoie em All',
    groupBy: 'laGroup by',
    ungroupBy: 'laUnGroup by',
    resetColumns: 'laReset Those Cols',
    expandAll: 'laOpen-em-up',
    collapseAll: 'laClose-em-up',
    toolPanel: 'laTool Panelo',
    export: 'laExporto',
    csvExport: 'laCSV Exportp',
    excelExport: 'laExcel Exporto (.xlsx)',
    excelXmlExport: 'laExcel Exporto (.xml)',
    pivotChartAndPivotMode: 'laPivot Chart & Pivot Mode',
    pivotChart: 'laPivot Chart',
    chartRange: 'laChart Range',
    columnChart: 'laColumn',
    groupedColumn: 'laGrouped',
    stackedColumn: 'laStacked',
    normalizedColumn: 'la100% Stacked',
    barChart: 'laBar',
    groupedBar: 'laGrouped',
    stackedBar: 'laStacked',
    normalizedBar: 'la100% Stacked',
    pieChart: 'laPie',
    pie: 'laPie',
    doughnut: 'laDoughnut',
    line: 'laLine',
    xyChart: 'laX Y (Scatter)',
    scatter: 'laScatter',
    bubble: 'laBubble',
    areaChart: 'laArea',
    area: 'laArea',
    stackedArea: 'laStacked',
    normalizedArea: 'la100% Stacked',
    pinLeft: 'laPin &lt;&lt;',
    pinRight: 'laPin &gt;&gt;',
    noPin: 'laDontPin &lt;&gt;',
    sum: 'laSum',
    min: 'laMin',
    max: 'laMax',
    none: 'laNone',
    count: 'laCount',
    average: 'laAverage',
    filteredRows: 'laFiltered',
    selectedRows: 'laSelected',
    totalRows: 'laTotal Rows',
    totalAndFilteredRows: 'laRows',
    copy: 'laCopy',
    copyWithHeaders: 'laCopy With Headers',
    ctrlC: 'laCtrl n C',
    paste: 'laPaste',
    ctrlV: 'laCtrl n V',
    pivotChartTitle: 'laPivot Chart',
    rangeChartTitle: 'laRange Chart',
    settings: 'laSettings',
    data: 'laData',
    format: 'laFormat',
    categories: 'laCategories',
    defaultCategory: '(laNone)',
    series: 'laSeries',
    xyValues: 'laX Y Values',
    paired: 'laPaired Mode',
    axis: 'laAxis',
    color: 'laColor',
    thickness: 'laThickness',
    xType: 'laX Type',
    automatic: 'laAutomatic',
    category: 'laCategory',
    number: 'laNumber',
    time: 'laTime',
    xRotation: 'laX Rotation',
    yRotation: 'laY Rotation',
    ticks: 'laTicks',
    width: 'laWidth',
    length: 'laLength',
    padding: 'laPadding',
    chart: 'laChart',
    title: 'laTitle',
    background: 'laBackground',
    font: 'laFont',
    top: 'laTop',
    right: 'laRight',
    bottom: 'laBottom',
    left: 'laLeft',
    labels: 'laLabels',
    size: 'laSize',
    minSize: 'laMinimum Size',
    maxSize: 'laMaximum Size',
    legend: 'laLegend',
    position: 'laPosition',
    markerSize: 'laMarker Size',
    markerStroke: 'laMarker Stroke',
    markerPadding: 'laMarker Padding',
    itemPaddingX: 'laItem Padding X',
    itemPaddingY: 'laItem Padding Y',
    strokeWidth: 'laStroke Width',
    offset: 'laOffset',
    offsets: 'laOffsets',
    tooltips: 'laTooltips',
    callout: 'laCallout',
    markers: 'laMarkers',
    shadow: 'laShadow',
    blur: 'laBlur',
    xOffset: 'laX Offset',
    yOffset: 'laY Offset',
    lineWidth: 'laLine Width',
    normal: 'laNormal',
    bold: 'laBold',
    italic: 'laItalic',
    boldItalic: 'laBold Italic',
    predefined: 'laPredefined',
    fillOpacity: 'laFill Opacity',
    strokeOpacity: 'laLine Opacity',
    columnGroup: 'laColumn',
    barGroup: 'laBar',
    pieGroup: 'laPie',
    lineGroup: 'laLine',
    scatterGroup: 'laScatter',
    areaGroup: 'laArea',
    groupedColumnTooltip: 'laGrouped',
    stackedColumnTooltip: 'laStacked',
    normalizedColumnTooltip: 'la100% Stacked',
    groupedBarTooltip: 'laGrouped',
    stackedBarTooltip: 'laStacked',
    normalizedBarTooltip: 'la100% Stacked',
    pieTooltip: 'laPie',
    doughnutTooltip: 'laDoughnut',
    lineTooltip: 'laLine',
    groupedAreaTooltip: 'laGrouped',
    stackedAreaTooltip: 'laStacked',
    normalizedAreaTooltip: 'la100% Stacked',
    scatterTooltip: 'laScatter',
    bubbleTooltip: 'laBubble',
    noDataToChart: 'laNo data available to be charted.',
    pivotChartRequiresPivotMode:
        'laPivot Chart requires Pivot Mode enabled.',
}